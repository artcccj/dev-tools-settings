syntax on
set expandtab " 将tab替换为相应数量的空格
set clipboard+=unnamedplus " 使用系统剪切板

set ideajoin " 使用idea 的行连接方式
set idearefactormode=keep

let mapleader=' '

set easymotion
" set surround

" redo
map U <C-r>

" NERDTree config
set NERDTree
map tt :NERDTreeToggle<CR>
map tc :NERDTreeClose<CR>
map tf :NERDTreeFocus<CR>

map H ^
map L $

" Actionsction
map <leader>s <Action>(SearchEverywhere)
map <leader>f <Action>(Find)
map <leader>F <Action>(FindInPath)

map <leader>o <Action>(GotoClass) " 跳转到类
map <leader>O <Action>(GotoFile) " 跳转到文件

map <leader>m <Action>(FileStructurePopup) " 显示文件结构
map <leader>h <Action>(TypeHierarchy) " 展示类继承关系
map <leader>d <Action>(EditorDuplicate) " 复制一行
vmap <leader>d <Action>(EditorDuplicateLines) " 复制选中的行
map <leader>n <Action>(Generate)
map <leader>e <Action>(GotoNextError)
map <leader>A <Action>(RenameFile) " 重命名 文件
map <leader>a <Action>(RenameElement) " 重命名 变量、类名

map <leader>r <Action>(RunClass) " 运行
map <leader>R <Action>(DebugClass) " debug

map <leader>b <Action>(ToggleLineBreakpoint) " 打断点

map == <Action>(ReformatCode) " 格式化代码

" 退出
map <leader>c <Action>(CloseContent)
map <leader>C <Action>(CloseAllEditors)

" 跳转相关配置
map gd <Action>(GotoDeclaration) " 跳转到声明
map gu <Action>(GotoSuperMethod) " 跳转到父类方法
map gi <Action>(GotoImplementation) " 跳到实现类
map ga <Action>(GotoAction) " 跳转Action
map gt <Action>(GotoTest) " 跳到测试类，没有自动创建

" 抽取方法
map me <Action>(ExtractMethod)

map mi <Action>(ImplementMethods) " 实现方法
map mo <Action>(OverrideMethods) " 覆盖方法
map <s-tab> <Action>(PreviousTab) " 上一个tab
map <tab> <Action>(NextTab) " 下一个tab

" Refactor
map gr <Action>(Refactorings.QuickListPopupAction)
map <leader>ip <Action>(IntroduceParameter)
map <leader>iv <Action>(IntroduceVariable)
map <leader>ic <Action>(IntroduceConstant)
map <leader>if <Action>(IntroduceField)

" 窗口分割
map <c-\> <Action>(SplitVertically)
map <c--> <Action>(SplitHorizontally)
map <c-m> <Action>(MoveEditorToOppositeTabGroup)

sethandler <c-j> a:vim
sethandler <c-k> a:vim

" 窗口之间跳转
map <c-h> <c-w>h
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l

" 终端
map <c-t> <Action>(Terminal.OpenInTerminal)
sethandler <c-t> a:vim
map <leader>t <Action>(ActivateTerminalToolWindow)
