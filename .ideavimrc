syntax on
set expandtab " 将tab替换为相应数量的空格
set clipboard+=unnamedplus " 使用系统剪切板

set ideajoin " 使用idea 的行连接方式
set idearefactormode=keep
set easymotion
set surround

set autoindent
set tabstop=2
set shiftwidth=2
set history=2000
set nobackup
set noswapfile

let mapleader=' '

" redo
nnoremap U <C-r>

" NERDTree config
set NERDTree
nnoremap tt :NERDTreeToggle<CR>
nnoremap tc :NERDTreeClose<CR>
nnoremap tf :NERDTreeFocus<CR>

nnoremap H ^
nnoremap L $

sethandler <c-j> a:vim
sethandler <c-k> a:vim

" 窗口之间跳转
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" Actions
nmap <leader><leader> <Action>(SearchEverywhere)
vmap <leader><leader> <Action>(SearchEverywhere)

" 跳转相关配置
nmap gc <Action>(GotoClass) " 跳转到实体类
nmap gd <Action>(GotoDeclaration) " 跳转到声明
nmap gu <Action>(GotoSuperMethod) " 跳转到父类方法
nmap gi <Action>(GotoImplementation) " 跳到实现类
nmap gf <Action>(GotoFile) " 跳转到文件
nmap ga <Action>(GotoAction) " 跳转Action
vmap ga <Action>(GotoAction)
nmap gt <Action>(GotoTest) " 跳到测试类，没有自动创建
nmap gm <Action>(FileStructurePopup) " 显示文件结构
nmap gh <Action>(TypeHierarchy) " 展示类继承关系

nmap <Leader>rf <Action>(RenameFile) " 重命名 文件
nmap <Leader>re <Action>(RenameElement) " 重命名 变量、类名

nmap == <Action>(ReformatCode) " 格式化代码

" 抽取方法
nmap me <Action>(ExtractMethod)
vmap me <Action>(ExtractMethod)

nmap mi <Action>(ImplementMethods) " 实现方法
nmap mo <Action>(OverrideMethods) " 覆盖方法
nmap <s-tab> <Action>(PreviousTab) " 上一个tab
nmap <tab> <Action>(NextTab) " 下一个tab

" Refactor
nmap gr <Action>(Refactorings.QuickListPopupAction)
vmap gr <Action>(Refactorings.QuickListPopupAction)

" 窗口分割
nmap <c-\> <Action>(SplitVertically)
nmap <c--> <Action>(SplitHorizontally)
nmap <c-m> <Action>(MoveEditorToOppositeTabGroup)

" 退出
nmap zz <Action>(CloseContent)
nmap za <Action>(CloseAllEditors)

" 终端
nmap <leader>t <Action>(Terminal.OpenInTerminal)
sethandler <c-t> a:vim
nmap <c-t> <Action>(ActivateTerminalToolWindow)

nmap <leader>m <Action>(Git.Menu)
nmap <leader>s <Action>(QuickChangeScheme)
nmap <leader>i <Action>(Generate)
nmap <leader>e <Action>(GotoNextError)
